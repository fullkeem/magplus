# MAG+ 웹매거진 시스템 아키텍처

## 아키텍처 구성요소

### 프론트엔드 구성요소

- **Next.js App Router**: 라우팅 및 페이지 관리
- **React Server Components**: 서버 사이드 렌더링
- **React Client Components**: 클라이언트 사이드 인터랙션
- **Tailwind CSS**: 스타일링 시스템
- **TypeScript**: 타입 안전성 보장

### 백엔드 서비스 구성요소

- **PostgreSQL Database**: 데이터베이스 (직접 구성)
- **Next.js API Routes**: 서버 API 엔드포인트
- **Email Service**: 이메일 발송 서비스
- **File Storage**: 미디어 파일 저장

### 배포 및 인프라 구성요소

- **Vercel**: 호스팅 및 배포 플랫폼
- **CDN**: 정적 자산 배포
- **DNS**: 도메인 관리

```mermaid
graph TB
    subgraph "클라이언트 계층"
        A[웹 브라우저]
        B[모바일 브라우저]
    end

    subgraph "프론트엔드 계층"
        C[Next.js App Router]
        D[React Server Components]
        E[React Client Components]
        F[Tailwind CSS]
    end

    subgraph "백엔드 서비스 계층"
        G[PostgreSQL Database]
        H[Next.js API Routes]
        I[Email Service]
        J[File Storage]
    end

    subgraph "배포 계층"
        K[Vercel]
        L[CDN]
    end

    A --> C
    B --> C
    C --> D
    C --> E
    D --> G
    E --> H
    H --> I
    H --> J
    K --> C
    L --> F
```

## 계층 구조

### 프레젠테이션 계층 (Presentation Layer)

- **역할**: 사용자 인터페이스 제공
- **구성**: Next.js Pages, React Components, Tailwind CSS
- **책임**: 사용자 경험, 반응형 디자인, 접근성

### 비즈니스 로직 계층 (Business Logic Layer)

- **역할**: 애플리케이션 핵심 로직 처리
- **구성**: React Hooks, Custom Hooks, Utils
- **책임**: 데이터 검증, 비즈니스 규칙 적용

### 데이터 접근 계층 (Data Access Layer)

- **역할**: 데이터베이스와의 상호작용
- **구성**: Next.js API Routes, Database Client
- **책임**: CRUD 작업, 데이터 변환

### 데이터 계층 (Data Layer)

- **역할**: 데이터 저장 및 관리
- **구성**: PostgreSQL, File Storage
- **책임**: 데이터 무결성, 백업

```mermaid
graph TD
    subgraph "계층 구조"
        A[프레젠테이션 계층<br/>Next.js + React + Tailwind]
        B[비즈니스 로직 계층<br/>React Hooks + Utils]
        C[데이터 접근 계층<br/>API Routes + DB Client]
        D[데이터 계층<br/>PostgreSQL + Storage]
    end

    A --> B
    B --> C
    C --> D
```

## 모듈화 및 컴포넌트

### 페이지 모듈

- **Home**: 메인 페이지
- **Articles**: 아티클 목록 페이지
- **Article**: 아티클 상세 페이지
- **Category**: 카테고리별 페이지
- **Search**: 검색 페이지

### 컴포넌트 모듈

- **Layout**: 헤더, 푸터, 네비게이션
- **Article**: 아티클 카드, 아티클 상세
- **Category**: 카테고리 필터, 태그
- **Common**: 버튼, 모달, 로딩

### 기능 모듈

- **Share**: 소셜 공유 기능
- **Subscribe**: 구독 관리
- **Search**: 검색 및 필터링

```mermaid
graph LR
    subgraph "모듈 구조"
        A[Pages 모듈]
        B[Components 모듈]
        C[Features 모듈]
        D[Utils 모듈]
        E[Types 모듈]
    end

    A --> B
    B --> C
    C --> D
    C --> E
```

## 데이터 흐름

### 아티클 조회 플로우

1. 사용자 요청 → Next.js Router
2. Server Component → Database 쿼리
3. 데이터 가져오기 → 컴포넌트 렌더링
4. 클라이언트 하이드레이션 → 인터랙션 활성화

### 아티클 생성 플로우

1. 사용자 입력 → React Form
2. 클라이언트 검증 → API Route
3. 데이터베이스 저장 → UI 상태 업데이트
4. 사용자 피드백

### 구독 관리 플로우

1. 구독 요청 → API Route
2. 이메일 검증 → Email Service
3. 구독 상태 업데이트 → UI 반영

```mermaid
sequenceDiagram
    participant U as 사용자
    participant N as Next.js
    participant A as API Route
    participant D as Database

    U->>N: 페이지 요청
    N->>A: 데이터 요청
    A->>D: SQL 실행
    D-->>A: 결과 반환
    A-->>N: 데이터 반환
    N-->>U: 페이지 렌더링

    U->>N: 인터랙션
    N->>A: API 호출
    A-->>N: 응답 반환
    N-->>U: UI 업데이트
```

## API 및 인터페이스

### REST API

- **Articles API**: CRUD 작업
- **Categories API**: 카테고리 관리
- **Subscriptions API**: 구독 관리

### Email Service API

- **Email Service**: 이메일 발송
- **Subscription Management**: 구독 관리

```mermaid
graph TB
    subgraph "API 계층"
        A[Articles API<br/>CRUD 작업]
        B[Categories API<br/>카테고리 관리]
        C[Subscriptions API<br/>구독 관리]
        D[Email Service<br/>이메일 발송]
    end

    subgraph "클라이언트"
        E[Next.js App]
    end

    E --> A
    E --> B
    E --> C
    E --> D
```

## 시스템 외부 환경과의 관계

### 소셜 미디어 플랫폼

- **Facebook**: 공유 API 연동
- **Instagram**: 공유 기능
- **Twitter**: 소셜 공유
- **KakaoTalk**: 카카오 공유

### 외부 서비스

- **Google Analytics**: 사용자 분석
- **Google Maps**: 위치 정보
- **Email Service**: 구독 이메일
- **CDN**: 이미지 최적화

### 개발 및 배포 환경

- **GitHub**: 코드 저장소
- **Vercel**: 배포 플랫폼
- **npm Registry**: 패키지 관리

```mermaid
graph TB
    subgraph "MAG+ 시스템"
        A[Next.js App]
        B[PostgreSQL DB]
    end

    subgraph "소셜 미디어"
        C[Facebook]
        D[Instagram]
        E[Twitter]
        F[KakaoTalk]
    end

    subgraph "외부 서비스"
        G[Google Analytics]
        H[Google Maps]
        I[Email Service]
        J[CDN]
    end

    subgraph "개발 환경"
        K[GitHub]
        L[Vercel]
        M[npm Registry]
    end

    A --> C
    A --> D
    A --> E
    A --> F
    A --> G
    A --> H
    A --> I
    A --> J

    K --> L
    L --> A
    B --> A
    M --> A
```

## 시스템 전체 아키텍처 다이어그램

```mermaid
graph TB
    subgraph "사용자 계층"
        U1[웹 사용자]
        U2[모바일 사용자]
        U3[관리자]
    end

    subgraph "프론트엔드 계층"
        F1[Next.js App Router]
        F2[React Components]
        F3[Tailwind CSS]
        F4[TypeScript]
    end

    subgraph "백엔드 서비스 계층"
        B1[PostgreSQL Database]
        B2[Next.js API Routes]
        B3[Email Service]
        B4[File Storage]
    end

    subgraph "외부 서비스"
        E1[소셜 미디어 API]
        E2[Google Services]
        E3[Email Service]
    end

    subgraph "인프라 계층"
        I1[Vercel]
        I2[CDN]
        I3[DNS]
    end

    U1 --> F1
    U2 --> F1
    U3 --> F1

    F1 --> F2
    F2 --> F3
    F2 --> F4

    F2 --> B1
    F2 --> B2
    F2 --> B3
    F2 --> B4

    B2 --> E1
    B2 --> E2
    B2 --> E3

    I1 --> F1
    I2 --> F3
    I3 --> I1
```

    I2 --> F3
    I3 --> I1

```

```
